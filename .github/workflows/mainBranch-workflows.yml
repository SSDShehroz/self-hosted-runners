name: Test Workflow

on:
  push:
    branches:
      - main

env:
  PROJECT_SELECTION:
  PROJECT_PATH:
  OUTPUT_PATH:
  

jobs:
  check_changes:
    runs-on: self-hosted
    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Detect file changes
      id: file_changes
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const compareCommits = await github.repos.compareCommits({
            owner: context.repo.owner,
            repo: context.repo.repo,
            base: context.payload.before,
            head: context.payload.after,
          });
          const changedFiles = compareCommits.data.files.map(file => file.filename);
          return changedFiles.join(',');
        
    - name: Display Files
      run: echo ${{steps.file_changes.outputs.result}}
    
    - name: check secondProject changes
      if: ${{contains(steps.file_changes.outputs.result,'secondProject') && !contains(steps.file_changes.outputs.result,'selfHostedRunners')}} 
      run: |
        echo "PROJECT_SELECTION=secondProject" >> $GITHUB_ENV
        echo "PROJECT_PATH=C:\Users\Admin\self-hosted-runners\secondProject" >> $GITHUB_ENV
        echo "OUTPUT_PATH=C:\output\angular\secondProject" >> $GITHUB_ENV

    - name: check selfHostedRunners changes
      if: ${{!contains(steps.file_changes.outputs.result,'secondProject') && contains(steps.file_changes.outputs.result,'selfHostedRunners')}} 
      run: |
        echo "PROJECT_SELECTION=selfHostedRunners" >> $GITHUB_ENV
        echo "PROJECT_PATH=C:\Users\Admin\self-hosted-runners\selfHostedRunners" >> $GITHUB_ENV
        echo "OUTPUT_PATH=C:\output\angular\secondProject" >> $GITHUB_ENV

    - name:  check all project changes
      if: ${{contains(steps.file_changes.outputs.result,'secondProject') && contains(steps.file_changes.outputs.result,'selfHostedRunners')}} 
      run:   echo "PROJECT_SELECTION=all" >> $GITHUB_ENV

    - name: other file changes check
      if: ${{!contains(steps.file_changes.outputs.result,'secondProject') && !contains(steps.file_changes.outputs.result,'selfHostedRunners')}} 
      run:  echo "PROJECT_SELECTION=nothing" >> $GITHUB_ENV

  build: 
    runs-on: self-hosted
    needs: [check_changes]
    steps:
      - name: Build Angular project name secondProject
        if: ${{env.PROJECT_SELECTION == 'secondProject'}}
        run: |
          # Run the PowerShell script
          pwsh -ExecutionPolicy Bypass -File C:\powerShellScript\angular\build\secondProject.ps1

      - name: Build Angular project name selfHostedRunners
        if: ${{env.PROJECT_SELECTION == 'selfHostedRunners'}}
        run: |
          # Run the PowerShell script
          pwsh -ExecutionPolicy Bypass -File C:\powerShellScript\angular\build\secondProject.ps1